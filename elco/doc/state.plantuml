@startuml

skinparam stateBackgroundColor<<Once>> #ADD1B2

state Idle
state StartHoldOff
state HoldOff

state Rx {
	state RxStartBit <<Once>>
	RxStartBit : start timer for 0.5 bit times
	RxStartBit --> RxWaitForNextBit

	RxWaitForNextBit : monitor timer
	RxWaitForNextBit --> RxBit : timer expired

	state RxBit <<Once>>
	RxBit : receive 1+8+1+1 bits
	RxBit : extend timer with 1 bit time
	RxBit --> RxByte : 11 bits received
	RxBit --> RxWaitForNextBit : < 11 bits received

	state RxByte <<Once>>
	RxByte : Check startbit, parity, stopbit
	RxByte --> RxInvalidFraming : framing error
	RxByte --> StartHoldOff : framing OK

	state RxInvalidFraming <<Once>>
	RxInvalidFraming : reset Rx buffer
	RxInvalidFraming --> StartHoldOff
}

state Tx {
	state TxNextBit <<Once>>
	TxNextBit : find next bit to send
	TxNextBit --> TxBit : bits remaining
	TxNextBit --> TxCompleted : all bits sent

	state TxBit <<Once>>
	TxBit : Tx bit
	TxBit : start timer for 0.5 bit time
	TxBit --> TxWaitForHalfBit

	TxWaitForHalfBit : monitor timer
	TxWaitForHalfBit --> TxMonitorBit : timer expired

	state TxMonitorBit <<Once>>
	TxMonitorBit : extend timer with 0.5 bit time
	TxMonitorBit : Verify input == output
	TxMonitorBit --> TxWaitForFullBit : match
	TxMonitorBit --> TxArbitrated : mismatch

	TxWaitForFullBit : monitor timer
	TxWaitForFullBit -u-> TxNextBit : timer expired

	state TxCompleted <<Once>>
	TxCompleted : Tx(Hi-Z)
	TxCompleted : reset Tx buffer
	TxCompleted --> StartHoldOff

	state TxArbitrated <<Once>>
	TxArbitrated: Copy Tx state to Rx state
	TxArbitrated: Reset Tx state to restart
	TxArbitrated --> RxBit
}

' Idle needs to be defined after the Rx/Tx composite state,
' otherwise the StartBitReceived gets rendered outside of the composite state

Idle : Rx()
Idle --> RxStartBit : Rx Low
Idle : Monitor Tx buffer
Idle --> TxNextBit : Tx buffer filled
Idle : Monitor RpMsg for new messages
Idle --> Idle : New RpMsg : copy to Tx buffer

state StartHoldOff <<Once>>
StartHoldOff : start timer for 10 bit times
StartHoldOff --> HoldOff

HoldOff : Monitor input for low
HoldOff --> RxStartBit : Input Low
HoldOff : Monitor timer
HoldOff --> EndOfMessage : timer expired

state EndOfMessage <<Once>>
EndOfMessage : if Rx buffer: send & reset Rx buffer to ARM
EndOfMessage -u-> Idle

@enduml
